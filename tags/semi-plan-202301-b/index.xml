<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>semi-plan-202301-b on DevOps Camp</title><link>https://www.devopscamp.cc/tags/semi-plan-202301-b/</link><description>Recent content in semi-plan-202301-b on DevOps Camp</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 15 Jan 2023 08:00:07 +0800</lastBuildDate><atom:link href="https://www.devopscamp.cc/tags/semi-plan-202301-b/index.xml" rel="self" type="application/rss+xml"/><item><title>[提交案例] tangxin 的作业： cobra - 01 实现编译与参数绑定 n 种方式</title><link>https://www.devopscamp.cc/posts/semi-plan/users/tangxin/202301-b/cobra01/cobra01/</link><pubDate>Sun, 15 Jan 2023 08:00:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/tangxin/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>DevOpsCamp 《初一十五计划》 总 1 期 (202301B)</title><link>https://www.devopscamp.cc/posts/2023/01/15/semi-plan-202301-2/</link><pubDate>Sun, 15 Jan 2023 07:18:42 +0800</pubDate><guid>https://www.devopscamp.cc/posts/2023/01/15/semi-plan-202301-2/</guid><description>DevOpsCamp 《初一十五计划》 第一期 原文链接: https://tangx.in/posts/2023/01/14/devopscamp-semimonthly-plan-202301-2/ 《初一十五计划 202301-2》 第一期 作业地址 本地主题 cobra, 英语 cobra - 01 实现编译与参数绑定 cobra - 02 读取配置配置文件 cobra - 03 交互式命令 阅读并翻译 《Dockerfile 最佳实践》 cobra 是 golang 中非常流行的命令行库， 熟练掌握事半功倍。 英语重要性就不多说了，搞技术必须强</description></item><item><title>作业: 翻译 《Dockerfile 最佳实践》</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/dockerfile-best-practices/dockerfile-best-practices/</link><pubDate>Fri, 13 Jan 2023 20:58:18 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/dockerfile-best-practices/dockerfile-best-practices/</guid><description>Dockerfile Best Practices 阅读并翻译 dockerfile 最佳实践 https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ 本文有很多命令， 从上下文可以推测文档内容。 因此相对简单。 本文有很多关键字的知识点。</description></item><item><title>作业: 翻译 《Dockerfile 最佳实践》</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/dockerfile-best-practices/dockerfile-best-practices/</link><pubDate>Fri, 13 Jan 2023 20:58:18 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/dockerfile-best-practices/dockerfile-best-practices/</guid><description>Dockerfile Best Practices 阅读并翻译 dockerfile 最佳实践 https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ 本文有很多命令， 从上下文可以推测文档内容。 因此相对简单。 本文有很多关键字的知识点。 译文 这篇文章涵盖了高效地构建镜像的最佳实践和推荐方法。 Dockerfile 是一个按顺序包含了构建给定镜像所需的全部指令的文本文件，Docker 通过读取 Dockerfile 中的指令来自动构建镜像。 Dockerfile 遵循特定的</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/zhangdongdong7/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/zhangdongdong7/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/24/devopscamp-cobra-binding-config-file/</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 解题思路 学习带有配置文件的参数绑定 Bind Flags with Config 1 2 3 4 5 6 7 8 9 10 //You can also bind your flags with viper: var author string func init() { rootCmd.PersistentFlags().StringVar(&amp;amp;author, &amp;#34;author&amp;#34;, &amp;#34;YOUR NAME&amp;#34;, &amp;#34;Author name for copyright attribution&amp;#34;) viper.BindPFlag(&amp;#34;author&amp;#34;, rootCmd.PersistentFlags().Lookup(&amp;#34;author&amp;#34;))</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/24/devopscamp-cobra-binding-config-file/</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 解题思路 关键逻辑 此部分是command.Run需要实现的内容 读取配置文件中的内容 使用 github.com/spf13/viper 实现 将配置文件中的内容解析</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 除了官方效果之外， 我还发现了 aliyun 命令行工具在配置账户的时候使用的是 交互式 ， 如下 为了更好的体现 实战性， 我们将以 aliyun configure --profile 的作为例子， 并进行一些优化。 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/26/devopscamp-cobra-interactive-survey/</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 解题思路 学习survey Input 1 2 3 4 5 name := &amp;#34;&amp;#34; prompt := &amp;amp;survey.Input{ Message: &amp;#34;ping&amp;#34;, } survey.AskOne(prompt, &amp;amp;name) Select 1 2 3 4 5 6 color := &amp;#34;&amp;#34; prompt := &amp;amp;survey.Select{ Message: &amp;#34;Choose a color:&amp;#34;, Options: []string{&amp;#34;red&amp;#34;, &amp;#34;blue&amp;#34;, &amp;#34;green&amp;#34;}, } survey.AskOne(prompt, &amp;amp;color) 具体实现参考cmd/root.go</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 除了官方效果之外， 我还发现了 aliyun 命令行工具在配置账户的时候使用的是 交互式 ， 如下 为了更好的体现 实战性， 我们将以 aliyun configure --profile 的作为例子， 并进行一些优化。 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/26/devopscamp-cobra-interactive-survey/</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 除了官方效果之外， 我还发现了 aliyun 命令行工具在配置账户的时候使用的是 交互式 ， 如下 为了更好的体现 实战性， 我们将以 aliyun configure --profile 的作为例子， 并进行一些优化。 解题思路 本次练习要实现两个命令： 不加任何参数实现 survey 的 demo configure 子命令，</description></item></channel></rss>