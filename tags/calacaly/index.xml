<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>calacaly on DevOps Camp</title><link>https://www.devopscamp.cc/tags/calacaly/</link><description>Recent content in calacaly on DevOps Camp</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 13 Jan 2023 15:19:07 +0800</lastBuildDate><atom:link href="https://www.devopscamp.cc/tags/calacaly/index.xml" rel="self" type="application/rss+xml"/><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 解题思路 学习带有配置文件的参数绑定 Bind Flags with Config 1 2 3 4 5 6 7 8 9 10 //You can also bind your flags with viper: var author string func init() { rootCmd.PersistentFlags().StringVar(&amp;amp;author, &amp;#34;author&amp;#34;, &amp;#34;YOUR NAME&amp;#34;, &amp;#34;Author name for copyright attribution&amp;#34;) viper.BindPFlag(&amp;#34;author&amp;#34;, rootCmd.PersistentFlags().Lookup(&amp;#34;author&amp;#34;))</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 解题思路 学习survey Input 1 2 3 4 5 name := &amp;#34;&amp;#34; prompt := &amp;amp;survey.Input{ Message: &amp;#34;ping&amp;#34;, } survey.AskOne(prompt, &amp;amp;name) Select 1 2 3 4 5 6 color := &amp;#34;&amp;#34; prompt := &amp;amp;survey.Select{ Message: &amp;#34;Choose a color:&amp;#34;, Options: []string{&amp;#34;red&amp;#34;, &amp;#34;blue&amp;#34;, &amp;#34;green&amp;#34;}, } survey.AskOne(prompt, &amp;amp;color) 具体实现参考cmd/root.go</description></item></channel></rss>