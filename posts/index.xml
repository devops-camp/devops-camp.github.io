<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on DevOps Camp</title><link>https://www.devopscamp.cc/posts/</link><description>Recent content in Posts on DevOps Camp</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 17 Feb 2023 22:34:14 +0800</lastBuildDate><atom:link href="https://www.devopscamp.cc/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>cobra08 - 使用第三方库 cobrautils 快速管理参数</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/cobra08-cobrautils/cobra08-cobrautils/</link><pubDate>Fri, 17 Feb 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/cobra08-cobrautils/cobra08-cobrautils/</guid><description>Cobra08 - 使用第三方库 cobrautils 快速管理参数 提示 cobrautils 是我写的一个 cobra 扩展库， 目的是为了能在 结构体 中 方便 的管理所有 flag 和默认值。 之前我们绑定参数时， 有多少参数就要写多少个 flag， 非常的麻烦。 1 2 3 4 5 6 7 8 9 10 11 12 type Person struct { Name string Age int } var p=&amp;amp;Person{} func init(){ root.Flags.StringVarP(&amp;amp;p.Name, &amp;#34;name&amp;#34;,&amp;#34;n&amp;#34;,&amp;#34;zhangsan&amp;#34;,&amp;#34;user name&amp;#34;) root.Flags.IntVarP(&amp;amp;p.Int, &amp;#34;age&amp;#34;,&amp;#34;a&amp;#34;,20,&amp;#34;user age&amp;#34;) } 但是用了 cobrautils 后， 所有的定义都在 结构体的标签中， 就</description></item><item><title>Golang Context 简介和入门使用</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/golang-context-sample/context-sample/</link><pubDate>Fri, 17 Feb 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/golang-context-sample/context-sample/</guid><description>Golang Context 简介和入门使用 提示 上下文 Context 应该是 Go语言 中一个极其重要的 基石 概念了。 这里有一篇 Go 语言设计与实现 - 上下文 Context ， 是目前我学习的资料中 完成度 和 友善度 都很高的一篇文章。 不管你愿不愿意， 用 Go 都绕不过 Context。不管用不用， 在所有 公共方法或函数 中强迫自己自己使用 context 作为入参。 虽然有点武断</description></item><item><title>Golang 接口(interface) 简介和入门使用</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/golang-interface-sample/interface-sample/</link><pubDate>Fri, 17 Feb 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/golang-interface-sample/interface-sample/</guid><description>Golang 接口(interface) 简介和入门使用 提示 上下文 Context 应该是 Go语言 中一个极其重要的 基石 概念了。 这里有一篇 Go 语言设计与实现 - 接口 interface ， 是目前我学习的资料中 完成度 和 友善度 都很高的一篇文章。 在 go v1.18 中， interface 有了一个别名 any。 所以在说 interface 和 any 的时候， 其实说的是相同的东西。 interface 的使用场景到处都是</description></item><item><title>DevOpsCamp 主站改版及作业仓库变更通知（20230207）</title><link>https://www.devopscamp.cc/posts/notice/2023/02/07/homework-sharing/</link><pubDate>Tue, 07 Feb 2023 09:36:16 +0800</pubDate><guid>https://www.devopscamp.cc/posts/notice/2023/02/07/homework-sharing/</guid><description>DevOpsCamp 主站改版及作业仓库变更通知（20230207） 之前 https://www.devopscamp.cc 是一个主站， 多个作业子站的规划。 然后运行中发现， 不仅在各站之间切换非常麻烦， 而且没有任何联系， 无法统一展示数据。 于是做了一些优化 1. 网站展示 将所有内容都在编译的时候合并在一起了， 在展示上， 所有数据都可以通过在 TAG 分类 例如， 查看某个</description></item><item><title>DevOpsCamp 《初一十五计划》 总 2 期 (202302A)</title><link>https://www.devopscamp.cc/posts/2023/02/01/devopscamp-semimonthly-plan-202302-a/</link><pubDate>Wed, 01 Feb 2023 17:25:12 +0800</pubDate><guid>https://www.devopscamp.cc/posts/2023/02/01/devopscamp-semimonthly-plan-202302-a/</guid><description>DevOpsCamp 《初一十五计划》 总 2 期 (202302A) 第一期回顾 1. 参与者 有两位朋友参与作业提交 calacaly zhangdongdong7 2. 优化点 将作业项目独立之后， 确实方便编译了， 但是同时也与主站隔离了， 无法方便的展示所有数据。 所有操作都需要跳转。 这个并不是我想要实现的分享社区。 关于这个问题， 我继续还要继续研究。 现在标题同名， 无法区分。 我已经有</description></item><item><title>cobra 实战扩展练习</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra-exercise/cobra-exercise/</link><pubDate>Fri, 20 Jan 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra-exercise/cobra-exercise/</guid><description>cobra 实战扩展联系 本练习不属于基础知识点， 不保证一定会进行讲解。 如果有时间， 我一定（挖坑）。 1. Linux 命令行模拟 本题由 机智的程序员小熊 提供。 一共两个命令， 并且提供了两篇非常详细的公众号文章进行解释。从 golang 原生的 flag 开始介绍， 一直到 cobra。 非常的详细， 很值得一看。 参考源码地址: minibear2333/cmd_utils - Github 这是一个</description></item><item><title>cobra 实战扩展练习</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra-exercise/cobra-exercise/</link><pubDate>Fri, 20 Jan 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra-exercise/cobra-exercise/</guid><description>cobra 实战扩展联系 本练习不属于基础知识点， 不保证一定会进行讲解。 如果有时间， 我一定（挖坑）。 1. Linux 命令行模拟 本题由 机智的程序员小熊 提供。 一共两个命令， 并且提供了两篇非常详细的公众号文章进行解释。从 golang 原生的 flag 开始介绍， 一直到 cobra。 非常的详细， 很值得一看。 参考源码地址: minibear2333/cmd_utils - Github 这是一个</description></item><item><title>Cobra07 - 命令行自动补全 （简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra07-completion/cobra07-completion/</link><pubDate>Thu, 19 Jan 2023 22:47:01 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra07-completion/cobra07-completion/</guid><description>Cobra07 - 命令行自动补全 （简单） 提示 文档在官网 作业要求 作业要求 模拟 kubectl 实现一个带有 多子命令 及 多参数 的命令。 并根据官网提示， 在自己的命令终端实现 补全 功能 提示: 不用实现具体功能， 在 Run() 中打印一句话就行了。</description></item><item><title>Cobra07 - 命令行自动补全 （简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra07-completion/cobra07-completion/</link><pubDate>Thu, 19 Jan 2023 22:47:01 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra07-completion/cobra07-completion/</guid><description>Cobra07 - 命令行自动补全 （简单） 提示 文档在官网 作业要求 作业要求 模拟 kubectl 实现一个带有 多子命令 及 多参数 的命令。 并根据官网提示， 在自己的命令终端实现 补全 功能 提示: 不用实现具体功能， 在 Run() 中打印一句话就行了。 解题思路 用cobra生成的命令行程序，默认有completion功能提示，查看提示 按提示执</description></item><item><title>Cobra06 - 持久化任务与参数</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra06-presistent/cobra06-persistent/</link><pubDate>Wed, 18 Jan 2023 22:47:01 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra06-presistent/cobra06-persistent/</guid><description>Cobra07 - 命令行自动补全 （简单） 提示 1 2 3 4 5 6 7 8 9 func main() { root := cobra.Command{ PersistentPreRun: func(cmd *cobra.Command, args []string) {}, PersistentPostRun: func(cmd *cobra.Command, args []string) {}, } root.PersistentFlags() } 作业要求 在 cobra 中提供了 Persistent Run 和 Flag， 作用是什么？ 父子孙命令之间， 是否具有继承关系？ 优先级是什么？ 自己想一段功能实现。 并论证。</description></item><item><title>Cobra06 - 持久化任务与参数</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra06-presistent/cobra06-persistent/</link><pubDate>Wed, 18 Jan 2023 22:47:01 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra06-presistent/cobra06-persistent/</guid><description>Cobra06 - 持久化任务与参数 （简单） 提示 1 2 3 4 5 6 7 8 9 func main() { root := cobra.Command{ PersistentPreRun: func(cmd *cobra.Command, args []string) {}, PersistentPostRun: func(cmd *cobra.Command, args []string) {}, } root.PersistentFlags() } 作业要求 在 cobra 中提供了 Persistent Run 和 Flag， 作用是什么？ 父子孙命令之间， 是否具有继承关系？ 优先级是什么？ 自己想一段功能实现。 并论证。 解题思路 查看cobra官网文档 https://cobra.dev/ 其中PreRun and PostRun Hooks这</description></item><item><title>Cobra05 - 子命令及子命令参数 （简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra05-subcommand/cobra05-subcommand/</link><pubDate>Tue, 17 Jan 2023 22:54:13 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra05-subcommand/cobra05-subcommand/</guid><description>Cobra05 - 子命令及子命令参数 （简单） 提示 考虑 零值 要求 在 04 的基础上， 增加子命令 Address 增加 Gender 和 Account 两个参数。 默认账户余额 Account 100。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Usage: greeting [command] Available Commands: address completion Generate the autocompletion script for the specified shell help Help about any command Flags: --account int 账户余额 (default 100) --age int 年龄 (default 20) --gender 性别 -h, --help help for greeting --name string 用户名 Use &amp;#34;greeting [command] --help&amp;#34; for more information about a command. 增加 家庭住址子命令</description></item><item><title>Cobra05 - 子命令及子命令参数 （简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra05-subcommand/cobra05-subcommand/</link><pubDate>Tue, 17 Jan 2023 22:54:13 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra05-subcommand/cobra05-subcommand/</guid><description>Cobra05 - 子命令及子命令参数 （简单） 提示 考虑 零值 要求 在 04 的基础上， 增加子命令 Address 增加 Gender 和 Account 两个参数。 默认账户余额 Account 100。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Usage: greeting [command] Available Commands: address completion Generate the autocompletion script for the specified shell help Help about any command Flags: --account int 账户余额 (default 100) --age int 年龄 (default 20) --gender 性别 -h, --help help for greeting --name string 用户名 Use &amp;#34;greeting [command] --help&amp;#34; for more information about a command. 增加 家庭住址子命令</description></item><item><title>Cobra05 - 子命令及子命令参数 （简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202302-a/cobra05-subcommand/cobra05-subcommand/</link><pubDate>Tue, 17 Jan 2023 22:54:13 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202302-a/cobra05-subcommand/cobra05-subcommand/</guid><description>Cobra05 - 子命令及子命令参数 （简单） 提示 考虑 零值 要求 在 04 的基础上， 增加子命令 Address 增加 Gender 和 Account 两个参数。 默认账户余额 Account 100。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Usage: greeting [command] Available Commands: address completion Generate the autocompletion script for the specified shell help Help about any command Flags: --account int 账户余额 (default 100) --age int 年龄 (default 20) --gender 性别 -h, --help help for greeting --name string 用户名 Use &amp;#34;greeting [command] --help&amp;#34; for more information about a command. 增加 家庭住址子命令</description></item><item><title>作业建议</title><link>https://www.devopscamp.cc/posts/notice/homework-proposal/</link><pubDate>Tue, 17 Jan 2023 16:01:44 +0800</pubDate><guid>https://www.devopscamp.cc/posts/notice/homework-proposal/</guid><description>作业发布建议 Homework Proposal 关于有朋友跟我反馈 作业内容少， 太简单 之类的问题， 其一、 做运维这行， 或者说做IT， 涉及的知识面确实太广泛了， 一个人的见解完全是沧海一粟。 其二、 最开始的作业都是为某个人定制的， 所以我是按照他的学习进度处理的。 发自肺腑的希望大家能对作业给出建议和意见， 最好是能 直接 出题。</description></item><item><title>cobra04 - 项目工程目录结构（简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra04-layout/cobra04-layout/</link><pubDate>Mon, 16 Jan 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-a/cobra04-layout/cobra04-layout/</guid><description>Cobra04 - 项目工程目录结构（简单） 提示 阅读 golang项目结构 h 提示： 这个标准是一个 建议， 开源社区大多循序此标准， **自己写代码， 可以遵循）。 而在不同的公司， 可能因为各种原因， 有自己的标准。 作业要求 将 作业: cobra - 01 实现编译与参数绑定 进行改造， 改造完成后符合工程目录 参考建议 1 2 3 4 5 6 7 8</description></item><item><title>cobra04 - 项目工程目录结构（简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra04-layout/cobra04-layout/</link><pubDate>Mon, 16 Jan 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202302-a/cobra04-layout/cobra04-layout/</guid><description>Cobra04 - 项目工程目录结构（简单） 提示 阅读 golang项目结构 h 提示： 这个标准是一个 建议， 开源社区大多循序此标准， **自己写代码， 可以遵循）。 而在不同的公司， 可能因为各种原因， 有自己的标准。 作业要求 将 作业: cobra - 01 实现编译与参数绑定 进行改造， 改造完成后符合工程目录 参考建议 1 2 3 4 5 6 7 8</description></item><item><title>cobra04 - 项目工程目录结构（简单）</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202302-a/cobra04-layout/cobra04-layout/</link><pubDate>Mon, 16 Jan 2023 22:34:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202302-a/cobra04-layout/cobra04-layout/</guid><description>Cobra04 - 项目工程目录结构（简单） 提示 阅读 golang项目结构 h 提示： 这个标准是一个 建议， 开源社区大多循序此标准， **自己写代码， 可以遵循）。 而在不同的公司， 可能因为各种原因， 有自己的标准。 作业要求 将 作业: cobra - 01 实现编译与参数绑定 进行改造， 改造完成后符合工程目录 参考建议 1 2 3 4 5 6 7 8</description></item><item><title>[提交案例] tangxin 的作业： cobra - 01 实现编译与参数绑定 n 种方式</title><link>https://www.devopscamp.cc/posts/semi-plan/users/tangxin/202301-b/cobra01/cobra01/</link><pubDate>Sun, 15 Jan 2023 08:00:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/tangxin/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>DevOpsCamp 《初一十五计划》 总 1 期 (202301B)</title><link>https://www.devopscamp.cc/posts/2023/01/15/semi-plan-202301-2/</link><pubDate>Sun, 15 Jan 2023 07:18:42 +0800</pubDate><guid>https://www.devopscamp.cc/posts/2023/01/15/semi-plan-202301-2/</guid><description>DevOpsCamp 《初一十五计划》 第一期 原文链接: https://tangx.in/posts/2023/01/14/devopscamp-semimonthly-plan-202301-2/ 《初一十五计划 202301-2》 第一期 作业地址 本地主题 cobra, 英语 cobra - 01 实现编译与参数绑定 cobra - 02 读取配置配置文件 cobra - 03 交互式命令 阅读并翻译 《Dockerfile 最佳实践》 cobra 是 golang 中非常流行的命令行库， 熟练掌握事半功倍。 英语重要性就不多说了，搞技术必须强</description></item><item><title>作业: 翻译 《Dockerfile 最佳实践》</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/dockerfile-best-practices/dockerfile-best-practices/</link><pubDate>Fri, 13 Jan 2023 20:58:18 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/dockerfile-best-practices/dockerfile-best-practices/</guid><description>Dockerfile Best Practices 阅读并翻译 dockerfile 最佳实践 https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ 本文有很多命令， 从上下文可以推测文档内容。 因此相对简单。 本文有很多关键字的知识点。</description></item><item><title>作业: 翻译 《Dockerfile 最佳实践》</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/dockerfile-best-practices/dockerfile-best-practices/</link><pubDate>Fri, 13 Jan 2023 20:58:18 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/dockerfile-best-practices/dockerfile-best-practices/</guid><description>Dockerfile Best Practices 阅读并翻译 dockerfile 最佳实践 https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ 本文有很多命令， 从上下文可以推测文档内容。 因此相对简单。 本文有很多关键字的知识点。 译文 这篇文章涵盖了高效地构建镜像的最佳实践和推荐方法。 Dockerfile 是一个按顺序包含了构建给定镜像所需的全部指令的文本文件，Docker 通过读取 Dockerfile 中的指令来自动构建镜像。 Dockerfile 遵循特定的</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 01 实现编译与参数绑定</title><link>https://www.devopscamp.cc/posts/semi-plan/users/zhangdongdong7/202301-b/cobra01/cobra01/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/zhangdongdong7/202301-b/cobra01/cobra01/</guid><description>作业: cobra - 01 实现编译与参数绑定 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --name 姓名 --age 年龄 如果年龄为空， 默认为 20 岁。 完成交叉编译脚本， 编译其他平台的二进制文件 -rwxr-xr-x 1 franktang staff 4220672 Jan 13 15:35 greeting-darwin-amd64 -rwxr-xr-x 1 franktang staff 4203442 Jan 13 15:35 greeting-darwin-arm64 -rwxr-xr-x 1 franktang staff 4215010 Jan 13 15:35 greeting-linux-amd64 -rwxr-xr-x 1 franktang staff 4157892 Jan 13 15:35 greeting-linux-arm64 执行输出效果如下 1 2 3 4 5 $ ./out/greeting-darwin-arm64 你好, 今年 20 岁 $ ./out/greeting-darwin-arm64 --age 30 --name zhangsan zhangsan</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/24/devopscamp-cobra-binding-config-file/</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 解题思路 学习带有配置文件的参数绑定 Bind Flags with Config 1 2 3 4 5 6 7 8 9 10 //You can also bind your flags with viper: var author string func init() { rootCmd.PersistentFlags().StringVar(&amp;amp;author, &amp;#34;author&amp;#34;, &amp;#34;YOUR NAME&amp;#34;, &amp;#34;Author name for copyright attribution&amp;#34;) viper.BindPFlag(&amp;#34;author&amp;#34;, rootCmd.PersistentFlags().Lookup(&amp;#34;author&amp;#34;))</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/24/devopscamp-cobra-binding-config-file/</description></item><item><title>作业: cobra - 02 读取配置配置文件</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra02/cobra02/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra02/cobra02/</guid><description>作业: cobra - 02 读取配置配置文件 要求: 使用 https://github.com/spf13/cobra 实现命令工具 命令具有以下参数 --config , -c 配置文件 配置文件如下 1 2 3 # config.yml name: zhangsan age: 20 将配置文件保存为 JSON 格式 1 $ cat config.json 输出结果 1 2 3 4 { &amp;#34;name&amp;#34;:&amp;#34;zhangsan&amp;#34;, &amp;#34;age&amp;#34;: 20 } 解题思路 关键逻辑 此部分是command.Run需要实现的内容 读取配置文件中的内容 使用 github.com/spf13/viper 实现 将配置文件中的内容解析</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 除了官方效果之外， 我还发现了 aliyun 命令行工具在配置账户的时候使用的是 交互式 ， 如下 为了更好的体现 实战性， 我们将以 aliyun configure --profile 的作为例子， 并进行一些优化。 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/26/devopscamp-cobra-interactive-survey/</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/calacaly/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 解题思路 学习survey Input 1 2 3 4 5 name := &amp;#34;&amp;#34; prompt := &amp;amp;survey.Input{ Message: &amp;#34;ping&amp;#34;, } survey.AskOne(prompt, &amp;amp;name) Select 1 2 3 4 5 6 color := &amp;#34;&amp;#34; prompt := &amp;amp;survey.Select{ Message: &amp;#34;Choose a color:&amp;#34;, Options: []string{&amp;#34;red&amp;#34;, &amp;#34;blue&amp;#34;, &amp;#34;green&amp;#34;}, } survey.AskOne(prompt, &amp;amp;color) 具体实现参考cmd/root.go</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/kcxg/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 除了官方效果之外， 我还发现了 aliyun 命令行工具在配置账户的时候使用的是 交互式 ， 如下 为了更好的体现 实战性， 我们将以 aliyun configure --profile 的作为例子， 并进行一些优化。 参考答案 独立完成以后或无法完成的时候， 可以参考答案 https://tangx.in/posts/2023/01/26/devopscamp-cobra-interactive-survey/</description></item><item><title>作业: cobra - 03 交互式命令</title><link>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra03/cobra03/</link><pubDate>Fri, 13 Jan 2023 15:19:07 +0800</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/users/menah3m/202301-b/cobra03/cobra03/</guid><description>作业: cobra - 03 交互式命令 要求: 使用 https://github.com/spf13/cobra 实现命令工具 使用 https://github.com/go-survey/survey 实现交互式命令 实现 Demo 效果 除了官方效果之外， 我还发现了 aliyun 命令行工具在配置账户的时候使用的是 交互式 ， 如下 为了更好的体现 实战性， 我们将以 aliyun configure --profile 的作为例子， 并进行一些优化。 解题思路 本次练习要实现两个命令： 不加任何参数实现 survey 的 demo configure 子命令，</description></item><item><title>初一十五计划</title><link>https://www.devopscamp.cc/posts/2023/01/13/semimonthly-plan/</link><pubDate>Fri, 13 Jan 2023 15:01:14 +0800</pubDate><guid>https://www.devopscamp.cc/posts/2023/01/13/semimonthly-plan/</guid><description>什么是 《初一十五计划》 《初一十五计划》 全称 “躲得过初一躲不过十五” 计划。 这是 DevOpsCamp 推出的一个帮助计划， 通常以实际生产中遇到的问题， 进行 脱敏、抽象、拆分 形成 靶场 ， 指导参与者进行定向联系。 以帮助参与者 掌握知识点、 梳理思路 等 该计划以 15日 为一个周期， 每个周期发布 不定数量、 不同类型的 的 作业。</description></item><item><title>外语提高计划</title><link>https://www.devopscamp.cc/posts/2023/01/13/second-language-plan/</link><pubDate>Fri, 13 Jan 2023 14:06:15 +0800</pubDate><guid>https://www.devopscamp.cc/posts/2023/01/13/second-language-plan/</guid><description>外语提高计划 词汇计划 大家选择一个外语学习app， 选择一本合适的词书， 每天学习加复习。 如果你开始此项计划， 可以在星球或其他任意地方坚持打卡。 建议： 初期， 可以选择 词书2000左右，每天20词， 每天大约15 -25分钟， 整个计划持续90-100天。 后期， 根据根据自己实际情况调整计划。 英语</description></item><item><title>技术群（微信）</title><link>https://www.devopscamp.cc/posts/notice/wxgroup/</link><pubDate>Thu, 12 Jan 2023 23:19:56 +0800</pubDate><guid>https://www.devopscamp.cc/posts/notice/wxgroup/</guid><description>技术群（微信） 说明 原文链接: https://www.devopscamp.cc/posts/notice/wxgroup/ DevOpsCamp互助群 目标是 互助群、分享群， 禁止一切形式的引战、水群。 希望大家宁愿让群保持安静， 也不要讨论与 技术和分享 无关的事情。 流程 为保障群中的朋友能 达成基本共识 ， 烦请参照以下步骤。 请先阅读 社区介绍 ， 了解社区主旨与愿景。 如果你认同社区公告内容，</description></item><item><title>社区介绍</title><link>https://www.devopscamp.cc/posts/notice/announcement/</link><pubDate>Thu, 12 Jan 2023 23:18:02 +0800</pubDate><guid>https://www.devopscamp.cc/posts/notice/announcement/</guid><description>知识星球「运维之路」免费答疑 - 试运营到 2023/12/31 原文链接: https://tangx.in/posts/2023/01/12/zsxq-devops-camp/ 说公益也好、说免费也罢。 反正这一个不收费的知识星球。 这个星球的主题 「运维之路」指导与帮助。 为什么要搞这个星球 前段时间看到一部视频解说， 讲的是一个大学生到西藏支教的故事， 片面叫《藏草青青》， 有兴趣的可以看看。 让我想起了年轻的时候也</description></item><item><title/><link>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/README/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/homework/202302-b/README/</guid><description>202302-b cobra08 - 使用第三方库 cobrautils 快速管理参数 Golang 接口(interface) 简介和入门使用 Golang Context 简介和入门使用</description></item><item><title/><link>https://www.devopscamp.cc/posts/semi-plan/README/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.devopscamp.cc/posts/semi-plan/README/</guid><description>《初一十五计划(Semimonthly Plan)》 作业分享 fork 本仓库 devops-camp/semi-plan-homework 用户目录说明， 参考文章 2. 作业练习 ， 将代码提交 Pull Request 到 devops-camp/semi-plan-homework-sharing 参考答案 202301-b cobra - 01 初始化第一个命令及参数绑定 cobra - 02 读取和保存配置文件（Json和Yaml） cobra - 03 使用 survey 实现交互式命令 202302-a cobra - 04 Go 项目的目录结构 cobra - 05 通过子命令聊聊 cobra</description></item></channel></rss>